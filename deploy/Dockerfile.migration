# Dockerfile for Database Migrations
FROM mcr.microsoft.com/dotnet/sdk:8.0 AS build
WORKDIR /src

# Copy project files
COPY ["src/inventory.api/inventory.api.csproj", "src/inventory.api/"]
COPY ["src/sales.api/sales.api.csproj", "src/sales.api/"]
COPY ["src/buildingblocks.contracts/buildingblocks.contracts.csproj", "src/buildingblocks.contracts/"]
COPY ["src/buildingblocks.events/buildingblocks.events.csproj", "src/buildingblocks.events/"]

# Restore dependencies
RUN dotnet restore "src/inventory.api/inventory.api.csproj"
RUN dotnet restore "src/sales.api/sales.api.csproj"

# Copy source code
COPY . .

# Install EF Core tools
RUN dotnet tool install --global dotnet-ef
ENV PATH="$PATH:/root/.dotnet/tools"

# Create migration script with proper connection string handling
RUN echo '#!/bin/bash\n\
set -e\n\
echo "Starting database migrations..."\n\
\n\
# Default connection string if not provided\n\
DEFAULT_CONNECTION="Server=sqlserver;Database=InventoryDb;User Id=sa;Password=Your_password123;TrustServerCertificate=True"\n\
SALES_CONNECTION="Server=sqlserver;Database=SalesDb;User Id=sa;Password=Your_password123;TrustServerCertificate=True"\n\
\n\
# Use environment variables or defaults\n\
INVENTORY_CONN="${ConnectionStrings__DefaultConnection:-$DEFAULT_CONNECTION}"\n\
SALES_CONN="${ConnectionStrings__SalesConnection:-$SALES_CONNECTION}"\n\
\n\
echo "Applying Inventory API migrations..."\n\
cd /src/src/inventory.api\n\
dotnet ef database update --connection "$INVENTORY_CONN" --verbose || {\n\
    echo "Inventory migration failed, but continuing..."\n\
}\n\
\n\
echo "Applying Sales API migrations..."\n\
cd /src/src/sales.api\n\
dotnet ef database update --connection "$SALES_CONN" --verbose || {\n\
    echo "Sales migration failed, but continuing..."\n\
}\n\
\n\
echo "Migration process completed!"\n\
' > /migration-script.sh

RUN chmod +x /migration-script.sh

ENTRYPOINT ["/migration-script.sh"]